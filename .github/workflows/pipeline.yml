name: CI

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql/mysql-server:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo_mysql
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env.example to .env
        run: cp .env.testing .env

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysql --user=root --password=root --host=127.0.0.1 --execute="SELECT 1"; then
              break
            fi
            echo 'MySQL is unavailable - sleeping'
            sleep 1
          done

      - name: Create MySQL database
        run: mysql --user=root --password=root --host=127.0.0.1 --execute="CREATE DATABASE testing;"

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: vendor/bin/phpunit

  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.php.coverage.reportPaths=coverage.xml